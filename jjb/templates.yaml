---
- job-template:
    name: '{name}_check'
    properties:
      - github:
          url: '{github-url}'
    parameters:
      - string:
          name: BRANCH
          default: '**'
          description: "Git commit or branch to build"
    scm:
      - git:
          branches:
            - $BRANCH
          url: '{github-url}'
          wipe-workspace: true
          skip-tag: true
          submodule:
            recursive: true
    triggers:
      - github
    wrappers:
      - inject
    builders:
      - groovy-branch
      - shell: '{check-cmd}'
    publishers:
      - add-git-meta
      - conditional-publisher:
          - condition-kind: shell
            condition-command: |
              echo ${{GIT_BRANCH}} | \
                egrep -q '^(origin\/)?(master|develop|release\/.*|hotfix\/.*)$'
            on-evaluation-failure: dont-run
            action:
              - trigger-parameterized-builds:
                - project: '{name}_build'
                  git-revision: true
                  condition: SUCCESS

- job-template:
    name: '{name}_build'
    properties:
      - github:
          url: '{github-url}'
    scm:
      - git:
          url: '{github-url}'
          wipe-workspace: true
          skip-tag: true
          submodule:
            recursive: true
    wrappers:
      - inject
    builders:
      - groovy-branch
      - shell: '{build-cmd}'
    publishers:
      - add-git-meta
      - archive:
          allow-empty: false
          artifacts: '*.tar.gz'
      - trigger-parameterized-builds:
        - project: '{name}_deploy'
          git-revision: true
          condition: SUCCESS

- job-template:
    name: '{name}_deploy'
    properties:
      - github:
          url: '{github-url}'
    wrappers:
      - inject
      - workspace-cleanup
    builders:
      - copyartifact:
          filter: '*.tar.gz'
          target: .
          flatten: true
          project: '{name}_build'
          which-build: upstream-build
          fallback-to-last-successful: true
      - shell: '{deploy-cmd}'
    publishers:
      - add-git-meta

- job-group:
    name: '{name}_pipeline'
    jobs:
      - '{name}_check'
      - '{name}_build'
      - '{name}_deploy'
